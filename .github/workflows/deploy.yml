name: Deploy Spring Boot to Digital Ocean

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Add SSH Key
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          SSH_PRIVATE_KEY: ${{ secrets.DROPLET_SSH_KEY }}
          SSH_KEY_PASSPHRASE: ${{ secrets.DROPLET_SSH_PASSPHRASE }}
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.DROPLET_IP }} >> ~/.ssh/known_hosts
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval $(ssh-agent -s)
          echo "$SSH_KEY_PASSPHRASE" | tr -d '\r' | ssh-add ~/.ssh/id_rsa

      - name: Create environment file
        run : |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_SCHEMA_NAME=${{ secrets.DB_SCHEMA_NAME }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DO_SPACES_BUCKET=${{ secrets.DO_SPACES_BUCKET }}" >> .env
          echo "DO_SPACES_ENDPOINT=${{ secrets.DO_SPACES_ENDPOINT }}" >> .env
          echo "DO_SPACES_CDN_ENDPOINT=${{ secrets.DO_SPACES_CDN_ENDPOINT }}" >> .env
          echo "DO_SPACES_KEY=${{ secrets.DO_SPACES_KEY }}" >> .env
          echo "DO_SPACES_SECRET=${{ secrets.DO_SPACES_SECRET }}" >> .env
          echo "DO_SPACES_REGION=${{ secrets.DO_SPACES_REGION }}" >> .env

      - name: Deploy to Digital Ocean droplet
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
#          Create the directory if it doesn't exist
          ssh root@${{ secrets.DROPLET_IP }} "mkdir -p /root/spring-boot-app"
               
          scp -r ./* .env root@${{ secrets.DROPLET_IP }} :/root/spring-boot-app
          ssh root@${{ secrets.DROPLET_IP }} "cd /root/spring-boot-app && docker-compose down && docker-compose up -d --build"
