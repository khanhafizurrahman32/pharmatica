name: Deploy Spring Boot to Digital Ocean

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Set up SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DROPLET_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY"
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub
          ssh-keyscan -H ${{ secrets.DROPLET_IP }} >> ~/.ssh/known_hosts

      - name: Debug SSH setup
        run: |
          echo "SSH key fingerprint:"
          ssh-keygen -lf ~/.ssh/id_rsa || echo "No existing SSH key found"
          echo "Public key:"
          cat ~/.ssh/id_rsa.pub || echo "No public key found"
          echo "Known hosts:"
          cat ~/.ssh/known_hosts || echo "No known hosts file found"

      - name: Verify SSH connection
        env:
          DROPLET_IP: ${{ secrets.DROPLET_IP }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@$DROPLET_IP "echo 'SSH connection successful'" || echo "SSH connection failed"

      # ... rest of your workflow ...

      - name: Deploy to Digital Ocean droplet
        env:
          DROPLET_IP: ${{ secrets.DROPLET_IP }}
          APP_DIR: /root/spring-boot-app
        run: |
          ssh -o StrictHostKeyChecking=no root@$DROPLET_IP "mkdir -p $APP_DIR"
          scp -o StrictHostKeyChecking=no -r ./* .env root@$DROPLET_IP:$APP_DIR || echo "Failed to copy files"
          ssh -o StrictHostKeyChecking=no root@$DROPLET_IP "cd $APP_DIR && docker-compose down && docker-compose up -d --build" || echo "Failed to run Docker commands"